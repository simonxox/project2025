pipeline {
    agent any 

    environment {
        GIT_REPO_NAME = "project2025"
        GIT_USER_NAME = "simonxox"
    }

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
            }
        }

        stage('Docker Image Build') {
            steps {
                script {
                    dir('backend') {
                        sh 'docker system prune -f'
                        sh 'docker container prune -f'
                        sh 'docker build -t backend .'
                    }
                }
            }
        }

        stage('ECR Image Pushing') {
            steps {
                script {
                    sh '''
                    aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 324037320561.dkr.ecr.ap-south-1.amazonaws.com
                    docker tag backend:latest 324037320561.dkr.ecr.ap-south-1.amazonaws.com/backend:${BUILD_NUMBER}
                    docker push 324037320561.dkr.ecr.ap-south-1.amazonaws.com/backend:${BUILD_NUMBER}
                    '''
                }
            }
        }

        stage('Update Deployment file') {
            steps {
                dir('kubernetes-files') {
                    withCredentials([string(credentialsId: 'my-git-pattoken', variable: 'git_token')]) {
                        sh '''
                            git config user.email "simonchinnu13@gmail.com"
                            git config user.name "simonxox"
                            echo "Build Number: $BUILD_NUMBER"
                            sed -i "s#image:.*#image: 324037320561.dkr.ecr.ap-south-1.amazonaws.com/backend:$BUILD_NUMBER#" backend-deployment.yaml
                            git add backend-deployment.yaml
                            git commit -m "Update deployment Image to version $BUILD_NUMBER" || echo "No changes to commit"
                            git push https://${git_token}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                dir('kubernetes-files') {
                    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                        sh '''
                            if command -v kubectl >/dev/null 2>&1; then
                                kubectl apply -f backend-deployment.yaml
                                kubectl rollout status deployment/backend
                            else
                                echo "kubectl not found. Skipping deployment."
                            fi
                        '''
                    }
                }
            }
        }

    } // closing stages
} // closing pipeline
